{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"PingOne DaVinci Partner Documentation \u00b6","title":"Overview"},{"location":"#pingone-davinci-partner-documentation","text":"","title":"PingOne DaVinci Partner Documentation"},{"location":"acuant/","text":"Acuant Connector \u00b6 Author: Evan Green Introduction \u00b6 Acuant\u00aeGO is a automated solution for identity verification, KYC, and digital onboarding. The Acuant Connector for PingOne DaVinci allows a DaVinci flow to redirect to an Acuant\u00aeGO Customer Journey. Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the Acuant\u00aeGO documentation Requirements \u00b6 To use the connector, you'll need: Acuant\u00aeGO Subscription Completed Go Form Link AcuantGo Setup \u00b6 Configure your Acuant\u00aeGO customer Journey Configure result redirects Add result Query Parameters Connector Setup \u00b6 Create an Acuant Connector in your PingOne DaVinci Environment Add the redirect URL from your Acuant Connection into the Integration AcuantGo Customer Journey into your connector For each result, add a query parameter for Accept, Deny, or Review at the end of your PingOne DaVinci redirect URL, depending on the result. e.g. ?result=deny (see screenshot above) Add the connection to a PingOne DaVinci Flow Configure the Redirect to Journey capability with the AcuantGO Journey URL Add any pre-poulated fields by clicking 'Add' and using the variable names as described in Pass Field Information to a Journey through a URL Using the connector in a flow \u00b6 You can use the connector in a variety of use cases, such as: Identity Verification \u00b6 The connector can be used in a workflow to verify an identity as part of a workflow Onboarding \u00b6 User data collection and identity verification as part of an onboarding flow Capabilities \u00b6 Redirect to Journey (initializeAuthorizationRequest) \u00b6 Send user to the AcuantGo User Journey Journey URL textField \u00b6 The URL of the Journey in AcuantGo Pre-populated Fields variableInputList \u00b6 Pre-fill user information. Troubleshooting \u00b6 For issues with AcuantGO please create a ticket in the Acuant Support Portal","title":"Acuant Connector"},{"location":"acuant/#acuant-connector","text":"Author: Evan Green","title":"Acuant Connector"},{"location":"acuant/#introduction","text":"Acuant\u00aeGO is a automated solution for identity verification, KYC, and digital onboarding. The Acuant Connector for PingOne DaVinci allows a DaVinci flow to redirect to an Acuant\u00aeGO Customer Journey.","title":"Introduction"},{"location":"acuant/#setup","text":"","title":"Setup"},{"location":"acuant/#resources","text":"For information and setup help, see the following sections of the Acuant\u00aeGO documentation","title":"Resources"},{"location":"acuant/#requirements","text":"To use the connector, you'll need: Acuant\u00aeGO Subscription Completed Go Form Link","title":"Requirements"},{"location":"acuant/#acuantgo-setup","text":"Configure your Acuant\u00aeGO customer Journey Configure result redirects Add result Query Parameters","title":"AcuantGo Setup"},{"location":"acuant/#connector-setup","text":"Create an Acuant Connector in your PingOne DaVinci Environment Add the redirect URL from your Acuant Connection into the Integration AcuantGo Customer Journey into your connector For each result, add a query parameter for Accept, Deny, or Review at the end of your PingOne DaVinci redirect URL, depending on the result. e.g. ?result=deny (see screenshot above) Add the connection to a PingOne DaVinci Flow Configure the Redirect to Journey capability with the AcuantGO Journey URL Add any pre-poulated fields by clicking 'Add' and using the variable names as described in Pass Field Information to a Journey through a URL","title":"Connector Setup"},{"location":"acuant/#using-the-connector-in-a-flow","text":"You can use the connector in a variety of use cases, such as:","title":"Using the connector in a flow"},{"location":"acuant/#identity-verification","text":"The connector can be used in a workflow to verify an identity as part of a workflow","title":"Identity Verification"},{"location":"acuant/#onboarding","text":"User data collection and identity verification as part of an onboarding flow","title":"Onboarding"},{"location":"acuant/#capabilities","text":"","title":"Capabilities"},{"location":"acuant/#redirect-to-journey-initializeauthorizationrequest","text":"Send user to the AcuantGo User Journey","title":"Redirect to Journey (initializeAuthorizationRequest)"},{"location":"acuant/#journey-url-textfield","text":"The URL of the Journey in AcuantGo","title":"Journey URL textField"},{"location":"acuant/#pre-populated-fields-variableinputlist","text":"Pre-fill user information.","title":"Pre-populated Fields variableInputList"},{"location":"acuant/#troubleshooting","text":"For issues with AcuantGO please create a ticket in the Acuant Support Portal","title":"Troubleshooting"},{"location":"arkose/","text":"Arkose Connector \u00b6 Author: Arkose Labs Introduction \u00b6 Use the Arkose DaVinci Connector to plugin the Arkose Detect and/or Challenge in any of your identity flows. The Arkose connector offers an easy way to verify the validity of the Arkose token and leverage the intel provided by Arkose to enhance the security of your workflow. The connector response can be used to: - Provide session risk information for appropriate authenticaiton decisions i.e. allow/ challenge or deny a session - Secure your reset password flow - Prevent bulk fake account creations in your user store and for many similar use cases. Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the Arkose Labs documentation: Calling the Verify API Requirements \u00b6 To use the connector, you'll need: [Your Arkose Private Key] [Your company URL, if applicable] Please contact your account team, if you don't have these already. Setting up the connector \u00b6 In the DaVinci platform, add an * Arkose connection. For help, see Adding a connection . Connector settings \u00b6 Once you have added the Arkose connection, select the connector in the flow studio and edit the connection to update the General settings. Company \u00b6 Provide your company name as it appears on your Arkose Verify URL subdomain Private Key \u00b6 Provide your Arkose private key for this flow here Capabilities \u00b6 Verify \u00b6 This capability is used verify the Arkose token and optionally send log data to Arkose Properties \u00b6 Private Key \u00b6 The Arkose token will be mapped from the previous HTML connection. The value can be mapped as {{local. .payload.output.arkoseToken}} where connectionID is the identifier of the HTML connection that presents the login form to the user in the DaVinci flow. HTTP Method \u00b6 Use the GET HTTP method to fetch the Verify API response for the current session or POST method to provide optional log data to Arkose Labs, while fetching the API response. The log data is a freeform string that allows information to be passed to the Verify API. This can be used to pass basic information that you want stored by Arkose with the session data. This can be used internally by Arkose when performing manual traffic analysis. Connector Response \u00b6 The connector returns a status code and a raw response object when successful. The fields values from the response object can be individually mapped to downstream connectors to drive the user flows. Using the connector in a flow \u00b6 You can use the connector in a variety of use cases. The connector will require the Arkose session token as an input. The session token will be generated client side upon interaction with the user, for instance, on a login page. In order to generate the the Arkose session token, you can use the HTTP connection as follows: 1. Add the HTTP connection and choose the Custom HTML Template Action from the list. 2. Add the 'username pasword form' under the HTML template. You can choose 'data-skcomponent' class to use the default Ping DaVinci form components. 3. Add a hidden div tag to the HTML template. This div tag will include the primary form submit button, which is hidden to prevent default form submit. This tag will also include the Arkose token data component. 4. The HTML template will include an additional submit button (not hidden) which will be used to trigger the Arkose enforcement challenge. 5. Use the Script template to embed the Arkose javacript on the login form. The script will also override the form's default submit action. 6. A callback will be defined to setup and initiate the Arkose session and challenge. Once the challenge is completed, the Arkose session token value will be set in the hidden data component and the form will be submitted to proceed to the next step. For more details on setting up the callback function, please refer to Arkose Client Side Setup Some example use cases are as follows: Authenticating a user \u00b6 The Arkose session token that is generated as part of user credentials submission is verified by the Arkose connector. The connector response can be used in the authentication flow to make authentication decisions and allow/ challenge or deny a user access based on the Arkose risk category for a given session. Registering a user \u00b6 The Arkose session token that is generated as part of user sign up process is verified by the Arkose connector. The connector response can be used in the registration flow to allow/ challenge or deny a user account creation based on the Arkose risk risk category for a given session. Resetting a user's password \u00b6 The Arkose session token that is generated as part of password reset process is verified by the Arkose connector. The connector response can be used in the password reset flow to allow/ challenge or deny a user account creation based on the Arkose risk risk category for a given session. Capabilities \u00b6 Verify (verify) \u00b6 This capability is used verify the Arkose token and optionally send log data to Arkose Session Token textField \u00b6 The Arkose session token that is generated on the HTML form (client side setup) HTTP Method dropDown \u00b6 HTTP Method to be used to verify Arkose session GET POST Log Data textField \u00b6 Information to be passed to Arkose along with session data to be used for manual traffic analysis Troubleshooting \u00b6 If the connector returns a 400 - bad request as a response, ensure that the Arkose token is correctly mapped as an input to the connector.","title":"Index"},{"location":"arkose/#arkose-connector","text":"Author: Arkose Labs","title":"Arkose Connector"},{"location":"arkose/#introduction","text":"Use the Arkose DaVinci Connector to plugin the Arkose Detect and/or Challenge in any of your identity flows. The Arkose connector offers an easy way to verify the validity of the Arkose token and leverage the intel provided by Arkose to enhance the security of your workflow. The connector response can be used to: - Provide session risk information for appropriate authenticaiton decisions i.e. allow/ challenge or deny a session - Secure your reset password flow - Prevent bulk fake account creations in your user store and for many similar use cases.","title":"Introduction"},{"location":"arkose/#setup","text":"","title":"Setup"},{"location":"arkose/#resources","text":"For information and setup help, see the following sections of the Arkose Labs documentation: Calling the Verify API","title":"Resources"},{"location":"arkose/#requirements","text":"To use the connector, you'll need: [Your Arkose Private Key] [Your company URL, if applicable] Please contact your account team, if you don't have these already.","title":"Requirements"},{"location":"arkose/#setting-up-the-connector","text":"In the DaVinci platform, add an * Arkose connection. For help, see Adding a connection .","title":"Setting up the connector"},{"location":"arkose/#connector-settings","text":"Once you have added the Arkose connection, select the connector in the flow studio and edit the connection to update the General settings.","title":"Connector settings"},{"location":"arkose/#company","text":"Provide your company name as it appears on your Arkose Verify URL subdomain","title":"Company"},{"location":"arkose/#private-key","text":"Provide your Arkose private key for this flow here","title":"Private Key"},{"location":"arkose/#capabilities","text":"","title":"Capabilities"},{"location":"arkose/#verify","text":"This capability is used verify the Arkose token and optionally send log data to Arkose","title":"Verify"},{"location":"arkose/#properties","text":"","title":"Properties"},{"location":"arkose/#private-key_1","text":"The Arkose token will be mapped from the previous HTML connection. The value can be mapped as {{local. .payload.output.arkoseToken}} where connectionID is the identifier of the HTML connection that presents the login form to the user in the DaVinci flow.","title":"Private Key"},{"location":"arkose/#http-method","text":"Use the GET HTTP method to fetch the Verify API response for the current session or POST method to provide optional log data to Arkose Labs, while fetching the API response. The log data is a freeform string that allows information to be passed to the Verify API. This can be used to pass basic information that you want stored by Arkose with the session data. This can be used internally by Arkose when performing manual traffic analysis.","title":"HTTP Method"},{"location":"arkose/#connector-response","text":"The connector returns a status code and a raw response object when successful. The fields values from the response object can be individually mapped to downstream connectors to drive the user flows.","title":"Connector Response"},{"location":"arkose/#using-the-connector-in-a-flow","text":"You can use the connector in a variety of use cases. The connector will require the Arkose session token as an input. The session token will be generated client side upon interaction with the user, for instance, on a login page. In order to generate the the Arkose session token, you can use the HTTP connection as follows: 1. Add the HTTP connection and choose the Custom HTML Template Action from the list. 2. Add the 'username pasword form' under the HTML template. You can choose 'data-skcomponent' class to use the default Ping DaVinci form components. 3. Add a hidden div tag to the HTML template. This div tag will include the primary form submit button, which is hidden to prevent default form submit. This tag will also include the Arkose token data component. 4. The HTML template will include an additional submit button (not hidden) which will be used to trigger the Arkose enforcement challenge. 5. Use the Script template to embed the Arkose javacript on the login form. The script will also override the form's default submit action. 6. A callback will be defined to setup and initiate the Arkose session and challenge. Once the challenge is completed, the Arkose session token value will be set in the hidden data component and the form will be submitted to proceed to the next step. For more details on setting up the callback function, please refer to Arkose Client Side Setup Some example use cases are as follows:","title":"Using the connector in a flow"},{"location":"arkose/#authenticating-a-user","text":"The Arkose session token that is generated as part of user credentials submission is verified by the Arkose connector. The connector response can be used in the authentication flow to make authentication decisions and allow/ challenge or deny a user access based on the Arkose risk category for a given session.","title":"Authenticating a user"},{"location":"arkose/#registering-a-user","text":"The Arkose session token that is generated as part of user sign up process is verified by the Arkose connector. The connector response can be used in the registration flow to allow/ challenge or deny a user account creation based on the Arkose risk risk category for a given session.","title":"Registering a user"},{"location":"arkose/#resetting-a-users-password","text":"The Arkose session token that is generated as part of password reset process is verified by the Arkose connector. The connector response can be used in the password reset flow to allow/ challenge or deny a user account creation based on the Arkose risk risk category for a given session.","title":"Resetting a user's password"},{"location":"arkose/#capabilities_1","text":"","title":"Capabilities"},{"location":"arkose/#verify-verify","text":"This capability is used verify the Arkose token and optionally send log data to Arkose","title":"Verify (verify)"},{"location":"arkose/#session-token-textfield","text":"The Arkose session token that is generated on the HTML form (client side setup)","title":"Session Token textField"},{"location":"arkose/#http-method-dropdown","text":"HTTP Method to be used to verify Arkose session GET POST","title":"HTTP Method dropDown"},{"location":"arkose/#log-data-textfield","text":"Information to be passed to Arkose along with session data to be used for manual traffic analysis","title":"Log Data textField"},{"location":"arkose/#troubleshooting","text":"If the connector returns a 400 - bad request as a response, ensure that the Arkose token is correctly mapped as an input to the connector.","title":"Troubleshooting"},{"location":"beyondidentity/","text":"Beyond Identity Connector \u00b6 Author: Suresh Bhandarkar Introduction \u00b6 Beyond Identity is fundamentally changing how the world logs in with a groundbreaking invisible, un-phishable MFA platform that provides the most secure and frictionless authentication on the planet. We stop ransomware and account takeover attacks in their tracks and dramatically improve the user experience. Beyond Identity\u2019s state-of-the-art platform eliminates passwords and other phishable factors, enabling organizations to confidently validate users\u2019 identities. The solution ensures users log in from authorized devices, and that the device meets the security policy requirements during login and continuously after that. Our revolutionary approach empowers zero trust by cryptographically binding the user\u2019s identity to their device and analyzing hundreds of risk signals on an ongoing basis. The company\u2019s advanced risk policy engine enables organizations to implement foundationally secure authentication and utilize risk signals for protection, rather than just for detection and response. For more information on why Intuit, Snowflake, and Roblox use Beyond Identity, please visit www.beyondidentity.com. Setup \u00b6 The Beyond Identity connector in PingOne DaVinci will perform an OIDC redirect to the Beyond Identity service for passwordless authentication and redirect back to PingOne DaVinci to continue the authentication flow. Use the following URLs to configure the Beyond Identity Connector in PingOne DaVinci. Issuer: https://auth.byndid.com/v2 Authorization: https://auth.byndid.com/v2/authorize Token: https://auth.byndid.com/v2/token Userinfo: https://auth.byndid.com/v2/userinfo JWKS: https://auth.byndid.com/v2/.well-known/jwks.json Scope: OpenID Client ID: You will receive this from Beyond Identity. Client Secret: You will receive this from Beyond Identity. Resources \u00b6 For information and setup help, see https://support.beyondidentity.com","title":"Beyond Identity Connector"},{"location":"beyondidentity/#beyond-identity-connector","text":"Author: Suresh Bhandarkar","title":"Beyond Identity Connector"},{"location":"beyondidentity/#introduction","text":"Beyond Identity is fundamentally changing how the world logs in with a groundbreaking invisible, un-phishable MFA platform that provides the most secure and frictionless authentication on the planet. We stop ransomware and account takeover attacks in their tracks and dramatically improve the user experience. Beyond Identity\u2019s state-of-the-art platform eliminates passwords and other phishable factors, enabling organizations to confidently validate users\u2019 identities. The solution ensures users log in from authorized devices, and that the device meets the security policy requirements during login and continuously after that. Our revolutionary approach empowers zero trust by cryptographically binding the user\u2019s identity to their device and analyzing hundreds of risk signals on an ongoing basis. The company\u2019s advanced risk policy engine enables organizations to implement foundationally secure authentication and utilize risk signals for protection, rather than just for detection and response. For more information on why Intuit, Snowflake, and Roblox use Beyond Identity, please visit www.beyondidentity.com.","title":"Introduction"},{"location":"beyondidentity/#setup","text":"The Beyond Identity connector in PingOne DaVinci will perform an OIDC redirect to the Beyond Identity service for passwordless authentication and redirect back to PingOne DaVinci to continue the authentication flow. Use the following URLs to configure the Beyond Identity Connector in PingOne DaVinci. Issuer: https://auth.byndid.com/v2 Authorization: https://auth.byndid.com/v2/authorize Token: https://auth.byndid.com/v2/token Userinfo: https://auth.byndid.com/v2/userinfo JWKS: https://auth.byndid.com/v2/.well-known/jwks.json Scope: OpenID Client ID: You will receive this from Beyond Identity. Client Secret: You will receive this from Beyond Identity.","title":"Setup"},{"location":"beyondidentity/#resources","text":"For information and setup help, see https://support.beyondidentity.com","title":"Resources"},{"location":"circleaccess/","text":"Circle Access Connector \u00b6 Author: Circle Systems Introduction \u00b6 The Circle Access connector provides user authentication through the Circle Access Service and provides the user session information, as well as the hash of emails, that can be used by other connectors for user control and validation. Setup \u00b6 Before setting up the connector \u00b6 Please visit https://console.gocircle.ai/ to register the application. Click on the [Add New] and fill in the fields. Here we used Circle Ping Demo as an example: To get the Login Return URL , follow the steps: click on Connections ( left menu ) on the Ping Identity page. click on the [ New Connection ] button and add the Circle Access Connector click on the conector and the Redirect URL will be shown Using the connector in a flow \u00b6 After adding the connector to the flow, some fields need to be configured. Click on the connector to configure these fields: We have to go back to https://console.gocircle.ai/ to get the field values (click on the App info icon - the first icon) Use cases \u00b6 A common use case is to enable credential-free authentication for your current end users. This allows your end users to access your Web application and/or server from any public (or private) computer and browser while eliminating any possibility of the user's credentials being stolen or hijacked. The user authenticates by scanning a QR code on their smartphone, with no need to type in any information. Another popular use case is to enable easy and fast log-in for users that are already registered. In this case, the user has registered their email with you, so you just need to get the hash of your current user and compare it with the hashes returned from the Circle Access connector. For new users, Circle Access allows rapid and secure sign-ups, as the hash of the email is always available after the QrCode scan. This means that you can just request the email once and use the login scan to confirm it, without the need to send information or requests to the user's email. Once confirmed, you just save the information and let the user in. This method is secure on any public (or private) computer and browser because - even if the computer is compromised - the only information that is exposed is the user email, while the hashes and session information are delivered securely and directly to your connector. Capabilities \u00b6 Authentication (initializeAuthorizationRequest) \u00b6 Authentication using Circle Access App Key textField \u00b6 App Key Read Key textField \u00b6 Read Key Write Key textField \u00b6 Write key Login Url textField \u00b6 The URL of your Circle Access login","title":"Circle Access Connector"},{"location":"circleaccess/#circle-access-connector","text":"Author: Circle Systems","title":"Circle Access Connector"},{"location":"circleaccess/#introduction","text":"The Circle Access connector provides user authentication through the Circle Access Service and provides the user session information, as well as the hash of emails, that can be used by other connectors for user control and validation.","title":"Introduction"},{"location":"circleaccess/#setup","text":"","title":"Setup"},{"location":"circleaccess/#before-setting-up-the-connector","text":"Please visit https://console.gocircle.ai/ to register the application. Click on the [Add New] and fill in the fields. Here we used Circle Ping Demo as an example: To get the Login Return URL , follow the steps: click on Connections ( left menu ) on the Ping Identity page. click on the [ New Connection ] button and add the Circle Access Connector click on the conector and the Redirect URL will be shown","title":"Before setting up the connector"},{"location":"circleaccess/#using-the-connector-in-a-flow","text":"After adding the connector to the flow, some fields need to be configured. Click on the connector to configure these fields: We have to go back to https://console.gocircle.ai/ to get the field values (click on the App info icon - the first icon)","title":"Using the connector in a flow"},{"location":"circleaccess/#use-cases","text":"A common use case is to enable credential-free authentication for your current end users. This allows your end users to access your Web application and/or server from any public (or private) computer and browser while eliminating any possibility of the user's credentials being stolen or hijacked. The user authenticates by scanning a QR code on their smartphone, with no need to type in any information. Another popular use case is to enable easy and fast log-in for users that are already registered. In this case, the user has registered their email with you, so you just need to get the hash of your current user and compare it with the hashes returned from the Circle Access connector. For new users, Circle Access allows rapid and secure sign-ups, as the hash of the email is always available after the QrCode scan. This means that you can just request the email once and use the login scan to confirm it, without the need to send information or requests to the user's email. Once confirmed, you just save the information and let the user in. This method is secure on any public (or private) computer and browser because - even if the computer is compromised - the only information that is exposed is the user email, while the hashes and session information are delivered securely and directly to your connector.","title":"Use cases"},{"location":"circleaccess/#capabilities","text":"","title":"Capabilities"},{"location":"circleaccess/#authentication-initializeauthorizationrequest","text":"Authentication using Circle Access","title":"Authentication (initializeAuthorizationRequest)"},{"location":"circleaccess/#app-key-textfield","text":"App Key","title":"App Key textField"},{"location":"circleaccess/#read-key-textfield","text":"Read Key","title":"Read Key textField"},{"location":"circleaccess/#write-key-textfield","text":"Write key","title":"Write Key textField"},{"location":"circleaccess/#login-url-textfield","text":"The URL of your Circle Access login","title":"Login Url textField"},{"location":"human/","text":"Human Connector \u00b6 Author: Rick Rosser and Brian Henning Introduction \u00b6 The HUMAN Connector is used to identify BOT threats using HUMAN signal data. This decision can used to mitigate BOT threats. Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the HUMAN documentation: https://docs.humansecurity.com/index.html \u00b6 Requirements \u00b6 To use the connector, you'll need: HUMAN JS Tag HUMAN Customer Id HUMAN Mitigation API Token HUMAN Policy Name (Optional) Setup form to capture HUMAN signal data. \u00b6 To use the HUMAN connector, you will first need the HUMAN tag provided by your HUMAN representative. This tag will collect and return signal data which will be passed to the HUMAN connector. Signal data is required to receive a bot-or-not decision from the HUMAN connector. You can view additional information about the HUMAN tag in the documentation . There is also a sample flow template that demonstrates its usage. Setting up the connector \u00b6 In Singular Key, add a PingOne SSO connection. For help, see Adding a connection . Connector settings \u00b6 The following fields are required in the GENERAL tab: * HUMAN Customer ID - Provided by your HUMAN representative * HUMAN Authentication Token - Provided by your HUMAN representative * HUMAN Policy Name - Provided by your HUMAN representative - *This may be an empty string * IP Address - Global property * User Agent - Global property * Session - OZ_TC property returned by HUMAN tag * Payload - OZ_SG property returned by HUMAN tag * DataToken - OZ_DT property returned by HUMAN tag Using the connector in a flow \u00b6 You can use the connector in a variety of use cases, such as: User Registration/Login \u00b6 The HUMAN tag should be loaded immediately to begin collecting signal data. Once the user finishes filling out the form and submits, you can retrieve the necessary fields (OZ_TC, OZ_SG, OZ_DT) provided by the HUMAN tag and pass those to their respective fields in the HUMAN connector (session, payload, dataToken). Please see the sample flow template for an example of this use case. Capabilities \u00b6 HUMAN Verification Engine (verification) \u00b6 Know Who's Real on the Internet. HUMAN Customer ID textField \u00b6 Customer ID from HUMAN HUMAN Authentication Token textField \u00b6 Bearer Token from HUMAN HUMAN Policy Name textField \u00b6 HUMAN mitigation policy name IP Address textField \u00b6 IP address User Agent textField \u00b6 User Agent Session textField \u00b6 Session Token Payload textField \u00b6 Payload Token Data Token textField \u00b6 Data Token","title":"Human Connector"},{"location":"human/#human-connector","text":"Author: Rick Rosser and Brian Henning","title":"Human Connector"},{"location":"human/#introduction","text":"The HUMAN Connector is used to identify BOT threats using HUMAN signal data. This decision can used to mitigate BOT threats.","title":"Introduction"},{"location":"human/#setup","text":"","title":"Setup"},{"location":"human/#resources","text":"For information and setup help, see the following sections of the HUMAN documentation:","title":"Resources"},{"location":"human/#httpsdocshumansecuritycomindexhtml","text":"","title":"https://docs.humansecurity.com/index.html"},{"location":"human/#requirements","text":"To use the connector, you'll need: HUMAN JS Tag HUMAN Customer Id HUMAN Mitigation API Token HUMAN Policy Name (Optional)","title":"Requirements"},{"location":"human/#setup-form-to-capture-human-signal-data","text":"To use the HUMAN connector, you will first need the HUMAN tag provided by your HUMAN representative. This tag will collect and return signal data which will be passed to the HUMAN connector. Signal data is required to receive a bot-or-not decision from the HUMAN connector. You can view additional information about the HUMAN tag in the documentation . There is also a sample flow template that demonstrates its usage.","title":"Setup form to capture HUMAN signal data."},{"location":"human/#setting-up-the-connector","text":"In Singular Key, add a PingOne SSO connection. For help, see Adding a connection .","title":"Setting up the connector"},{"location":"human/#connector-settings","text":"The following fields are required in the GENERAL tab: * HUMAN Customer ID - Provided by your HUMAN representative * HUMAN Authentication Token - Provided by your HUMAN representative * HUMAN Policy Name - Provided by your HUMAN representative - *This may be an empty string * IP Address - Global property * User Agent - Global property * Session - OZ_TC property returned by HUMAN tag * Payload - OZ_SG property returned by HUMAN tag * DataToken - OZ_DT property returned by HUMAN tag","title":"Connector settings"},{"location":"human/#using-the-connector-in-a-flow","text":"You can use the connector in a variety of use cases, such as:","title":"Using the connector in a flow"},{"location":"human/#user-registrationlogin","text":"The HUMAN tag should be loaded immediately to begin collecting signal data. Once the user finishes filling out the form and submits, you can retrieve the necessary fields (OZ_TC, OZ_SG, OZ_DT) provided by the HUMAN tag and pass those to their respective fields in the HUMAN connector (session, payload, dataToken). Please see the sample flow template for an example of this use case.","title":"User Registration/Login"},{"location":"human/#capabilities","text":"","title":"Capabilities"},{"location":"human/#human-verification-engine-verification","text":"Know Who's Real on the Internet.","title":"HUMAN Verification Engine (verification)"},{"location":"human/#human-customer-id-textfield","text":"Customer ID from HUMAN","title":"HUMAN Customer ID textField"},{"location":"human/#human-authentication-token-textfield","text":"Bearer Token from HUMAN","title":"HUMAN Authentication Token textField"},{"location":"human/#human-policy-name-textfield","text":"HUMAN mitigation policy name","title":"HUMAN Policy Name textField"},{"location":"human/#ip-address-textfield","text":"IP address","title":"IP Address textField"},{"location":"human/#user-agent-textfield","text":"User Agent","title":"User Agent textField"},{"location":"human/#session-textfield","text":"Session Token","title":"Session textField"},{"location":"human/#payload-textfield","text":"Payload Token","title":"Payload textField"},{"location":"human/#data-token-textfield","text":"Data Token","title":"Data Token textField"},{"location":"ipgeolocationio/","text":"IPGeoLocation.io Connector \u00b6 Author: arno@pingidentity.com Introduction \u00b6 Free IP API provides country, city, state, province, local currency, latitude and longitude, company detail, ISP lookup, language, zip code, country calling code, time zone, current time, sunset and sunrise time, moonset and moonrise time from any IPv4 and IPv6 address in REST, JSON and XML format over HTTPS. Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the ipgeolocation.io documentation: https://ipgeolocation.io/documentation/ip-geolocation-api.html Requirements \u00b6 You will need to obtain an API Key even for the free API. You may obtain one by signing up at: https://ipgeolocation.io/signup.html Setting up the connector \u00b6 When creating an instance of this connector in DaVinci, you will need to set your API key in the connector settings. That's the only thing you need. Connector settings \u00b6 API Key: you can get the API Key once you have signed up by logging in to your ipgeolocation.io account at https://app.ipgeolocation.io/auth/login Using the connector in a flow \u00b6 TO use the connector in a flow, you can pass it the global.ip variable or another IP address obtained from another connection. Use case \u00b6 IP Geolocation is a technique used to find out the geographical location of the user using his IP address. Wherever in the world, you use the internet, you will be assigned an IP address. This IP address contains your network identity and your location information. This information is used by online businesses to recognize their visitors and offer a more local experience such as displaying prices in local currency , calculating shipping cost based on the detected conutry or copmuting time differences with the detected timezone. Capabilities \u00b6 Single Lookup (singleLookup) \u00b6 Single IP address lookup IP address textField required \u00b6 IP address to lookup Language dropDown \u00b6 Paid plan subscriptions can get the response in languages other than English. English German Russian Japanese French Chinese Simplified Spanish Czech Italian Limitations \u00b6 This connector does not implement . the astronomy or timezone APIs that ipgeolocation.io also offers . the bulk IP gelocation API","title":"IPGeoLocation.io Connector"},{"location":"ipgeolocationio/#ipgeolocationio-connector","text":"Author: arno@pingidentity.com","title":"IPGeoLocation.io Connector"},{"location":"ipgeolocationio/#introduction","text":"Free IP API provides country, city, state, province, local currency, latitude and longitude, company detail, ISP lookup, language, zip code, country calling code, time zone, current time, sunset and sunrise time, moonset and moonrise time from any IPv4 and IPv6 address in REST, JSON and XML format over HTTPS.","title":"Introduction"},{"location":"ipgeolocationio/#setup","text":"","title":"Setup"},{"location":"ipgeolocationio/#resources","text":"For information and setup help, see the following sections of the ipgeolocation.io documentation: https://ipgeolocation.io/documentation/ip-geolocation-api.html","title":"Resources"},{"location":"ipgeolocationio/#requirements","text":"You will need to obtain an API Key even for the free API. You may obtain one by signing up at: https://ipgeolocation.io/signup.html","title":"Requirements"},{"location":"ipgeolocationio/#setting-up-the-connector","text":"When creating an instance of this connector in DaVinci, you will need to set your API key in the connector settings. That's the only thing you need.","title":"Setting up the connector"},{"location":"ipgeolocationio/#connector-settings","text":"API Key: you can get the API Key once you have signed up by logging in to your ipgeolocation.io account at https://app.ipgeolocation.io/auth/login","title":"Connector settings"},{"location":"ipgeolocationio/#using-the-connector-in-a-flow","text":"TO use the connector in a flow, you can pass it the global.ip variable or another IP address obtained from another connection.","title":"Using the connector in a flow"},{"location":"ipgeolocationio/#use-case","text":"IP Geolocation is a technique used to find out the geographical location of the user using his IP address. Wherever in the world, you use the internet, you will be assigned an IP address. This IP address contains your network identity and your location information. This information is used by online businesses to recognize their visitors and offer a more local experience such as displaying prices in local currency , calculating shipping cost based on the detected conutry or copmuting time differences with the detected timezone.","title":"Use case"},{"location":"ipgeolocationio/#capabilities","text":"","title":"Capabilities"},{"location":"ipgeolocationio/#single-lookup-singlelookup","text":"Single IP address lookup","title":"Single Lookup (singleLookup)"},{"location":"ipgeolocationio/#ip-address-textfield-required","text":"IP address to lookup","title":"IP address textField required"},{"location":"ipgeolocationio/#language-dropdown","text":"Paid plan subscriptions can get the response in languages other than English. English German Russian Japanese French Chinese Simplified Spanish Czech Italian","title":"Language dropDown"},{"location":"ipgeolocationio/#limitations","text":"This connector does not implement . the astronomy or timezone APIs that ipgeolocation.io also offers . the bulk IP gelocation API","title":"Limitations"},{"location":"ipstack/","text":"IPStack Connector \u00b6 Doc draft \u00b6 Author: arno@pingidentity.com Introduction \u00b6 Locate and identify website visitors by IP address. ipstack offers one of the leading IP to geolocation APIs and global IP database services worldwide. Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the ipstack documentation: https://ipstack.com/documentation Requirements \u00b6 To use the connector, you'll need an API Key. You can get one at https://ipstack.com/product Setting up the connector \u00b6 In Singular Key, add a IPStack connection. Connector settings \u00b6 To set your IPStack API Key for your connector, go to the General tab and save your connection. Using the connector in a flow \u00b6 The connector provides comprehensive location-related data, currency-related data, timezone-related data, connection-related data and security-related data. Locating the current IP \u00b6 Capabilities \u00b6 Standard Lookup. (standardLookup) \u00b6 The ipstack's primary endpoint is called Standard Lookup and is used to look up single IPv4 or IPv6 addresses. IP Address textField \u00b6 The IP address for which geolocation data should be obtained. Limitations \u00b6 Currently only support standard lookup","title":"IPStack Connector"},{"location":"ipstack/#ipstack-connector","text":"","title":"IPStack Connector"},{"location":"ipstack/#doc-draft","text":"Author: arno@pingidentity.com","title":"Doc draft"},{"location":"ipstack/#introduction","text":"Locate and identify website visitors by IP address. ipstack offers one of the leading IP to geolocation APIs and global IP database services worldwide.","title":"Introduction"},{"location":"ipstack/#setup","text":"","title":"Setup"},{"location":"ipstack/#resources","text":"For information and setup help, see the following sections of the ipstack documentation: https://ipstack.com/documentation","title":"Resources"},{"location":"ipstack/#requirements","text":"To use the connector, you'll need an API Key. You can get one at https://ipstack.com/product","title":"Requirements"},{"location":"ipstack/#setting-up-the-connector","text":"In Singular Key, add a IPStack connection.","title":"Setting up the connector"},{"location":"ipstack/#connector-settings","text":"To set your IPStack API Key for your connector, go to the General tab and save your connection.","title":"Connector settings"},{"location":"ipstack/#using-the-connector-in-a-flow","text":"The connector provides comprehensive location-related data, currency-related data, timezone-related data, connection-related data and security-related data.","title":"Using the connector in a flow"},{"location":"ipstack/#locating-the-current-ip","text":"","title":"Locating the current IP"},{"location":"ipstack/#capabilities","text":"","title":"Capabilities"},{"location":"ipstack/#standard-lookup-standardlookup","text":"The ipstack's primary endpoint is called Standard Lookup and is used to look up single IPv4 or IPv6 addresses.","title":"Standard Lookup. (standardLookup)"},{"location":"ipstack/#ip-address-textfield","text":"The IP address for which geolocation data should be obtained.","title":"IP Address textField"},{"location":"ipstack/#limitations","text":"Currently only support standard lookup","title":"Limitations"},{"location":"opswat/","text":"OPSWAT MetaAccess Connector \u00b6 Author: Josh Porth, Jerold Lodge Introduction \u00b6 OPSWAT's MetaAccess provides zero trust access to applications by ensuring endpoints are compliant as part of attempting to authenticate with an IdP like Ping Federation or an authentication flow builder like Ping DaVinci. As part of the authentication process, the connector consults with MetaAccess to confirm if the device is compliant based on the policies your organization configures in MetaAccess. If the device is compliant, then the device gains access as it normally would, if the device is not compliant, the user will either be just warned or fully blocked (based on configuration), until the device is brought into compliance. The user is provided detailed instructions on how to self-remediate. Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the MetaAccess documentation: About MetaAccess: MetaAccess Platform Overview: https://www.opswat.com/products/metaaccess Getting Started: https://docs.opswat.com/macloud-sdp/configuration---management Integrating with Ping Identity's Davinci: https://docs.opswat.com/macloud-sdp/integrations/ping-davinci-guide Requirements \u00b6 To use the connector, you'll need: A free MetaAccess account, you can create one here Create OAuth Application \u00b6 Once your account is created, you can proceed with registering your application . Following submission, applications are confirmed and Client Key and Client Secret strings are provided. These keys are unique and should remain confidential. Enable Cross-Domain API \u00b6 Enable Cross-domain API settings, in Settings > Integrations , on your MetaAccess account. Once the cross-domain API setting is enabled, MetaAccess agent tries to open a cross-domain API at the configured port on an endpoint. Please make sure that the configured port is valid and not used by any existing applications running on the same endpoint. Setting up the connector \u00b6 In Ping DaVinci, add a OPSWAT MetaAccess connection. For help, see Adding a connection . Connector settings \u00b6 Oauth Client ID \u00b6 The Oauth Client Key obtained from creating an Oauth Application in MetaAccess. Copy and paste the Client Key from the Oauth Application in MetaAccess . Oauth Client Secret \u00b6 The Oauth Client Secret obtained from creating an Oauth Application in MetaAccess. Copy and paste the Client Secret from the Oauth Application in MetaAccess . MetaAccess Domain (Optional) \u00b6 The MetaAccess domain used for making API calls to MetaAccess. In almost all cases the default value ( gears.opswat.com ) is correct. If you are using a different tenant, for example, the Beta tenant, then the value should be changed to gears-beta.opswat.com . Cross-Domain API Port (Optional) \u00b6 The port number of Cross-Domain API. The default value of 11369 should be correct if you did not customize the port number when enabling the Cross-Domain API. Verify the Cross-Domain API port number in MetaAccess under Settings > Integrations . Using the connector in a flow \u00b6 The OPSWAT MetaAccess connector is designed to help DaVinci flow builders limit a user's progress in a flow based on the user's devices compliance status with MetaAccess. The OPSWAT MetaAccess connector provides device compliance and access control functionality within Ping DaVinci Flows. Blocking non-compliant devices \u00b6 Blocking non-compliant devices is the primary use case of the MetaAccess Conector. Simply putting the connector inline with your flow, effectily limiting the progress of non-compliant devices at the point where the MetaAccess Connector is placed. For example, placing the MetaAccess Connector immediately after a PingOne SSO Connector will allow all users to authenticate, but will only allow compliant devices to continure past the MetaAccess Connector. Users progressing beyond the MetaAccess connector must have successfully authenticated with PingOne SSO and passed the MetaAccess compliance check. Capabilities \u00b6 Compliance Check (complianceCheck) \u00b6 Check device's compliance","title":"OPSWAT MetaAccess Connector"},{"location":"opswat/#opswat-metaaccess-connector","text":"Author: Josh Porth, Jerold Lodge","title":"OPSWAT MetaAccess Connector"},{"location":"opswat/#introduction","text":"OPSWAT's MetaAccess provides zero trust access to applications by ensuring endpoints are compliant as part of attempting to authenticate with an IdP like Ping Federation or an authentication flow builder like Ping DaVinci. As part of the authentication process, the connector consults with MetaAccess to confirm if the device is compliant based on the policies your organization configures in MetaAccess. If the device is compliant, then the device gains access as it normally would, if the device is not compliant, the user will either be just warned or fully blocked (based on configuration), until the device is brought into compliance. The user is provided detailed instructions on how to self-remediate.","title":"Introduction"},{"location":"opswat/#setup","text":"","title":"Setup"},{"location":"opswat/#resources","text":"For information and setup help, see the following sections of the MetaAccess documentation: About MetaAccess: MetaAccess Platform Overview: https://www.opswat.com/products/metaaccess Getting Started: https://docs.opswat.com/macloud-sdp/configuration---management Integrating with Ping Identity's Davinci: https://docs.opswat.com/macloud-sdp/integrations/ping-davinci-guide","title":"Resources"},{"location":"opswat/#requirements","text":"To use the connector, you'll need: A free MetaAccess account, you can create one here","title":"Requirements"},{"location":"opswat/#create-oauth-application","text":"Once your account is created, you can proceed with registering your application . Following submission, applications are confirmed and Client Key and Client Secret strings are provided. These keys are unique and should remain confidential.","title":"Create OAuth Application"},{"location":"opswat/#enable-cross-domain-api","text":"Enable Cross-domain API settings, in Settings > Integrations , on your MetaAccess account. Once the cross-domain API setting is enabled, MetaAccess agent tries to open a cross-domain API at the configured port on an endpoint. Please make sure that the configured port is valid and not used by any existing applications running on the same endpoint.","title":"Enable Cross-Domain API"},{"location":"opswat/#setting-up-the-connector","text":"In Ping DaVinci, add a OPSWAT MetaAccess connection. For help, see Adding a connection .","title":"Setting up the connector"},{"location":"opswat/#connector-settings","text":"","title":"Connector settings"},{"location":"opswat/#oauth-client-id","text":"The Oauth Client Key obtained from creating an Oauth Application in MetaAccess. Copy and paste the Client Key from the Oauth Application in MetaAccess .","title":"Oauth Client ID"},{"location":"opswat/#oauth-client-secret","text":"The Oauth Client Secret obtained from creating an Oauth Application in MetaAccess. Copy and paste the Client Secret from the Oauth Application in MetaAccess .","title":"Oauth Client Secret"},{"location":"opswat/#metaaccess-domain-optional","text":"The MetaAccess domain used for making API calls to MetaAccess. In almost all cases the default value ( gears.opswat.com ) is correct. If you are using a different tenant, for example, the Beta tenant, then the value should be changed to gears-beta.opswat.com .","title":"MetaAccess Domain (Optional)"},{"location":"opswat/#cross-domain-api-port-optional","text":"The port number of Cross-Domain API. The default value of 11369 should be correct if you did not customize the port number when enabling the Cross-Domain API. Verify the Cross-Domain API port number in MetaAccess under Settings > Integrations .","title":"Cross-Domain API Port (Optional)"},{"location":"opswat/#using-the-connector-in-a-flow","text":"The OPSWAT MetaAccess connector is designed to help DaVinci flow builders limit a user's progress in a flow based on the user's devices compliance status with MetaAccess. The OPSWAT MetaAccess connector provides device compliance and access control functionality within Ping DaVinci Flows.","title":"Using the connector in a flow"},{"location":"opswat/#blocking-non-compliant-devices","text":"Blocking non-compliant devices is the primary use case of the MetaAccess Conector. Simply putting the connector inline with your flow, effectily limiting the progress of non-compliant devices at the point where the MetaAccess Connector is placed. For example, placing the MetaAccess Connector immediately after a PingOne SSO Connector will allow all users to authenticate, but will only allow compliant devices to continure past the MetaAccess Connector. Users progressing beyond the MetaAccess connector must have successfully authenticated with PingOne SSO and passed the MetaAccess compliance check.","title":"Blocking non-compliant devices"},{"location":"opswat/#capabilities","text":"","title":"Capabilities"},{"location":"opswat/#compliance-check-compliancecheck","text":"Check device's compliance","title":"Compliance Check (complianceCheck)"},{"location":"postman/","text":"Postman Connector \u00b6 Author: samirgandhi@pingidentity.com Introduction \u00b6 Postman is an API platform for building and using APIs. Postman simplifies each step of the API lifecycle and streamlines collaboration so you can create better APIs\u2014faster. Postman Collections are a group of saved requests. The Postman Connector for Davinci allows you to run a Postman collection from within a Davinci Flow. This is useful for running a collection that is already created in Postman rather than rebuilding the work in Davinci. Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the Postman documentation: Postman Postman Homepage Build Postman Collection Requirements \u00b6 To use the connector, you'll need: Postman A Postman Collection Export Collection and Variables \u00b6 A Postman Collection uses environment variables to be more flexible. Export your desired collection and variable set(s) to be used in Davinci. Export collections, environment variables, and global variables as json describe here: https://learning.postman.com/docs/getting-started/importing-and-exporting-data/ Optional, share collection as public url as described here: https://learning.postman.com/docs/collaborating-in-postman/sharing/#sharing-postman-entities Setting up the connector \u00b6 In SDavinci, add a Postman connection. For help, see Adding a connection . Connector settings \u00b6 Global Variables \u00b6 Exported JSON of Global variables from a Postman Workspace. Using the connector in a flow \u00b6 The connector is used in a flow to run a collection. After completion the connector returns the status of all requests and details on any failed assertions. Capabilities \u00b6 Run Collection (runCollection) \u00b6 Run an Postman collection passed as JSON Collection codeEditor \u00b6 Exported JSON blob or {\"url\":\" \"} of collection to be used for iteration Environment Variables codeEditor \u00b6 Environments provide a set of variables for use within collections. JSON blob of an environment exported from postman","title":"Postman Connector"},{"location":"postman/#postman-connector","text":"Author: samirgandhi@pingidentity.com","title":"Postman Connector"},{"location":"postman/#introduction","text":"Postman is an API platform for building and using APIs. Postman simplifies each step of the API lifecycle and streamlines collaboration so you can create better APIs\u2014faster. Postman Collections are a group of saved requests. The Postman Connector for Davinci allows you to run a Postman collection from within a Davinci Flow. This is useful for running a collection that is already created in Postman rather than rebuilding the work in Davinci.","title":"Introduction"},{"location":"postman/#setup","text":"","title":"Setup"},{"location":"postman/#resources","text":"For information and setup help, see the following sections of the Postman documentation: Postman Postman Homepage Build Postman Collection","title":"Resources"},{"location":"postman/#requirements","text":"To use the connector, you'll need: Postman A Postman Collection","title":"Requirements"},{"location":"postman/#export-collection-and-variables","text":"A Postman Collection uses environment variables to be more flexible. Export your desired collection and variable set(s) to be used in Davinci. Export collections, environment variables, and global variables as json describe here: https://learning.postman.com/docs/getting-started/importing-and-exporting-data/ Optional, share collection as public url as described here: https://learning.postman.com/docs/collaborating-in-postman/sharing/#sharing-postman-entities","title":"Export Collection and Variables"},{"location":"postman/#setting-up-the-connector","text":"In SDavinci, add a Postman connection. For help, see Adding a connection .","title":"Setting up the connector"},{"location":"postman/#connector-settings","text":"","title":"Connector settings"},{"location":"postman/#global-variables","text":"Exported JSON of Global variables from a Postman Workspace.","title":"Global Variables"},{"location":"postman/#using-the-connector-in-a-flow","text":"The connector is used in a flow to run a collection. After completion the connector returns the status of all requests and details on any failed assertions.","title":"Using the connector in a flow"},{"location":"postman/#capabilities","text":"","title":"Capabilities"},{"location":"postman/#run-collection-runcollection","text":"Run an Postman collection passed as JSON","title":"Run Collection (runCollection)"},{"location":"postman/#collection-codeeditor","text":"Exported JSON blob or {\"url\":\" \"} of collection to be used for iteration","title":"Collection codeEditor"},{"location":"postman/#environment-variables-codeeditor","text":"Environments provide a set of variables for use within collections. JSON blob of an environment exported from postman","title":"Environment Variables codeEditor"},{"location":"randomuserme/","text":"RandomUser.me Connector \u00b6 Author: arno@pingidentity.com Introduction \u00b6 Generate random user data Setup \u00b6 Resources \u00b6 For information and setup help, see the following sections of the randomuser.me documentation: Documentation \u00b6 https://randomuser.me/documentation Requirements \u00b6 The randomuser.me service is free and open-source, no account or key required. Get User \u00b6 Pick a gender or leave random Set a seed to control which user you get Setting up the connector \u00b6 No setup required, simply drop the connector in your flow and get a random user. Connector settings \u00b6 No API key is required. Using the connector in a flow \u00b6 You can use the connector in a variety of use cases, such as: Application testing \u00b6 Get a random user to test that an application, service or API call works. Account provisioning stuffing \u00b6 Some services may require data you do not have, just generate random data about the user and stuff that data in. Capabilities \u00b6 Get Random User (getRandomUser) \u00b6 Generate random user data Gender dropDown \u00b6 Gender of the random user Random Male Female Seed textField \u00b6 Seeds allow you to always generate the same user or set of users Limitations \u00b6 Does not currently support bulk random user generation","title":"RandomUser.me Connector"},{"location":"randomuserme/#randomuserme-connector","text":"Author: arno@pingidentity.com","title":"RandomUser.me Connector"},{"location":"randomuserme/#introduction","text":"Generate random user data","title":"Introduction"},{"location":"randomuserme/#setup","text":"","title":"Setup"},{"location":"randomuserme/#resources","text":"For information and setup help, see the following sections of the randomuser.me documentation:","title":"Resources"},{"location":"randomuserme/#documentation","text":"https://randomuser.me/documentation","title":"Documentation"},{"location":"randomuserme/#requirements","text":"The randomuser.me service is free and open-source, no account or key required.","title":"Requirements"},{"location":"randomuserme/#get-user","text":"Pick a gender or leave random Set a seed to control which user you get","title":"Get User"},{"location":"randomuserme/#setting-up-the-connector","text":"No setup required, simply drop the connector in your flow and get a random user.","title":"Setting up the connector"},{"location":"randomuserme/#connector-settings","text":"No API key is required.","title":"Connector settings"},{"location":"randomuserme/#using-the-connector-in-a-flow","text":"You can use the connector in a variety of use cases, such as:","title":"Using the connector in a flow"},{"location":"randomuserme/#application-testing","text":"Get a random user to test that an application, service or API call works.","title":"Application testing"},{"location":"randomuserme/#account-provisioning-stuffing","text":"Some services may require data you do not have, just generate random data about the user and stuff that data in.","title":"Account provisioning stuffing"},{"location":"randomuserme/#capabilities","text":"","title":"Capabilities"},{"location":"randomuserme/#get-random-user-getrandomuser","text":"Generate random user data","title":"Get Random User (getRandomUser)"},{"location":"randomuserme/#gender-dropdown","text":"Gender of the random user Random Male Female","title":"Gender dropDown"},{"location":"randomuserme/#seed-textfield","text":"Seeds allow you to always generate the same user or set of users","title":"Seed textField"},{"location":"randomuserme/#limitations","text":"Does not currently support bulk random user generation","title":"Limitations"}]}